// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/infrastructure/db/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id            String     @id @default(nanoid())
  first_name         String     @db.VarChar(100)
  last_name          String     @db.VarChar(100)
  email              String     @unique
  password           String
  role               Role
  temporary_password Boolean    @default(true)
  cars               Car[]      @relation(name: "UserCars")
  schedules          Schedule[] @relation(name: "UserSchedules")
}

model Car {
  licence_plate String       @id @db.VarChar(15)
  reference     String       @db.VarChar(100)
  brand         String       @db.VarChar(100)
  model         String       @db.VarChar(100)
  year          Int
  mileage       Int
  price         Float
  color         String       @db.VarChar(50)
  transmission  Transmission
  fuel_type     FuelType
  status        CarStatus    @default(AVAILABLE)
  description   String?      @db.Text
  images        String[]     @db.Text
  added_by      String
  user          User         @relation(fields: [added_by], references: [user_id], name: "UserCars")
}

model Review {
  review_id Int          @id @default(autoincrement())
  rating    Int
  title     String       @db.VarChar(255)
  author    String       @db.VarChar(255)
  content   String       @db.Text
  status    ReviewStatus @default(PENDING)
}

model Schedule {
  schedule_id  Int     @id @default(autoincrement())
  day          String  @db.VarChar(50)
  opening_time String  @db.VarChar(10)
  closing_time String  @db.VarChar(10)
  is_closed    Boolean @default(false)
  added_by     String
  user         User    @relation(fields: [added_by], references: [user_id], name: "UserSchedules")
}

model CarReference {
  reference_id Int    @id @default(autoincrement())
  brand        String @db.VarChar(100)
  model        String @db.VarChar(100)
  year         Int
  counter      Int    @default(0)
}

enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

enum CarStatus {
  AVAILABLE
  SOLD
  RESERVED
}

enum FuelType {
  GASOLINE
  DIESEL
  ELECTRIC
  HYBRID
}

enum Transmission {
  MANUAL
  AUTOMATIC
}

enum Role {
  EMPLOYEE
  ADMIN
}
